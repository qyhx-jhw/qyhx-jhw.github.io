<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jhw 博客网站</title>
    <link>https://jhweb.top/</link>
    <description>Recent content on jhw 博客网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 30 Aug 2020 16:12:55 +0800</lastBuildDate>
    
	<atom:link href="https://jhweb.top/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linux-文件和目录列表</title>
      <link>https://jhweb.top/linux/linux/</link>
      <pubDate>Sat, 20 Jun 2020 14:51:56 +0800</pubDate>
      
      <guid>https://jhweb.top/linux/linux/</guid>
      <description>常见的Linux顶层虚拟目录及内容     目录 用途     / 虚拟目录的根目录。通常不会在这存储文件。   /bin 二进制目录。存放许多用户级的GNU工具。   /boot 启动目录，存放启动文件。   /dev 设备目录，Linux在这里创建设备节点。   /etc 系统设备文件目录。   /home 主目录，Linux在这里创建用户目录。   /lib 库目录，存放系统和应用程序的库文件.   /media 媒体目录，可移动媒体设备的常用挂载点。   /mnt 挂载目录，另一个可移动媒体设备的常用挂载点。   /opt 可选目录，常用于存放第三方软件包和数据文件。   /proc 进程目录，存放现有硬件及当前进程的相关信息。   /root root用户的主目录。   /sbin 系统二进制目录，存放许多GNU管理员及工具。   /run 运行目录，存放系统运作时的运行数据。   /srv 服务目录，存放本地服务的相关文件。   /sys 系统目录，存放系统硬件信息的相关文件。   /tmp 临时目录，可以在目录中创建和删除临时工作文件。   /usr 用户二进制目录，大量用户级的GUN工具和数据文件都存储在这里。   /var 可变目录，用以存放经常变化的文件，比如日志文件。     遍历目录 &amp;lsquo;cd&amp;rsquo; 在Linux文件系统上，可以使用cd将shell会话切换到另一个目录   绝对文件路径：使用请明确的文件路径</description>
    </item>
    
    <item>
      <title>Linux文件管理</title>
      <link>https://jhweb.top/linux/linux_make_file/</link>
      <pubDate>Sat, 27 Jun 2020 15:32:51 +0800</pubDate>
      
      <guid>https://jhweb.top/linux/linux_make_file/</guid>
      <description>[TOC]
创建文件   touch命令创建文件
[root@CentOS7 ~/dir1]#touch test_one [root@CentOS7 ~/dir1]#ll total 0 -rw-r--r--. 1 root root 0 Jun 27 15:41 test_one   复制文件  cp命令完成复制文件的操作：cp source[要复制的文件] destination[目标] 复制于test_one一样的文件test_tow  [root@CentOS7 ~/dir1]#cp test_one test_tow [root@CentOS7 ~/dir1]#ll total 0 -rw-r--r--. 1 root root 0 Jun 27 15:41 test_one -rw-r--r--. 1 root root 0 Jun 27 15:47 test_tow [root@CentOS7 ~/dir1]#  cp -i 新的文件已经存在（test_tow），强制询问是否需要覆盖原文件 也可以复制到现有的其它目录中cp -i test_one ../dir2   [root@CentOS7 ~/dir2]#cd .</description>
    </item>
    
    <item>
      <title>Linux_系统管理命令</title>
      <link>https://jhweb.top/linux/linux_%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Tue, 30 Jun 2020 15:09:26 +0800</pubDate>
      
      <guid>https://jhweb.top/linux/linux_%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4/</guid>
      <description>一.监测程序   探查进程
 进程（process），ps命令输出 支持三种不同类型的命令行参数   Unix风格参数
   参数 描述     -A 显示所有进程   -N 显示与指定参数不符的所有进程   -a 显示除控制进程（session leader ① ）和无终端进程外的所有进程   -d 显示除控制进程外的所有进程   -e 显示所有进程   -C cmdlist 显示包含在 cmdlist 列表中的进程   -G grplist 显示组ID在 grplist 列表中的进程   -U userlist 显示属主的用户ID在 userlist 列表中的进程   -g grplist 显示会话或组ID在 grplist 列表中的进程 ②   -p pidlist 显示PID在 pidlist 列表中的进程   -s sesslist 显示会话ID在 sesslist 列表中的进程   -t ttylist 显示终端ID在 ttylist 列表中的进程   -u userlist 显示有效用户ID在 userlist 列表中的进程   -F 显示更多额外输出（相对 -f 参数而言）   -O format 显示默认的输出列以及 format 列表指定的特定列   -M 显示进程的安全信息   -c 显示进程的额外调度器信息   -f 显示完整格式的输出   -j 显示任务信息   -l 显示长列表   -o format 仅显示由 format 指定的列   -y 不要显示进程标记（process flag，表明进程状态的标记）   -Z 显示安全标签（security context） ① 信息   -H 用层级格式来显示进程（树状，用来显示父进程）   -n namelist 定义了 WCHAN 列显示的值   -w 采用宽输出模式，不限宽度显示   -L 显示进程中的线程   -V 显示 ps 命令的版本号      UID:启动这些进程的用户 PID：进程的进程ID PPID：父进程的进程号 C:进程生命周期中CPU利用率 STIME：进程启动时的系统时间 TTY：进程启动时的终端设备 TIME：运行进程所需要累计CPU时间 CMD：启动的程序名称     BSD风格参数</description>
    </item>
    
    <item>
      <title>Python：排序与查找</title>
      <link>https://jhweb.top/python/python_sort_search/</link>
      <pubDate>Mon, 29 Jun 2020 17:05:32 +0800</pubDate>
      
      <guid>https://jhweb.top/python/python_sort_search/</guid>
      <description>课程来自于：数据结构与算法Python版&amp;ndash;北京大学&amp;ndash;陈斌老师 顺序查找Sequential Search  如果数据项保存在如列表这样的集合中我们会称这些数据项具有线性或者顺序关系。 在Python List中,这些数据项的存储位置称为下标( index) , 这些下标都是有序的整数。 通过下标,我们就可以按照顺序来访问和查找数据项,这种技术称为&amp;quot;顺序查找” def sequentialSearch(alist, item): pos = 0 found = False while pos &amp;lt; len(alist) and not found: if alist[pos] == item: found = True else: pos += 1 return found   二分查找 # 二分查找：有序表 def binarySearch(alist, item): first = 0 # 起点 last = len(alist) - 1 # 终点 found = False while first &amp;lt;= last and not found: midpoint = (first + last) // 2 # 中间下标 if alist[midpoint] == item: found = True else: if item &amp;lt; alist[midpoint]: last = midpoint - 1 else: first = midpoint + 1 return found 二分查找递归版本 def binarySearch(alist: list, item): if len(alist) == 0: return False else: midpoint = len(alist) // 2 # 在中间下标 if alist[midpoint] == item: return True else: if item &amp;lt; alist[midpoint]: return binarySearch(alist[:midpoint], item) else: return binarySearch(alist[midpoint + 1:], item) # +1是包左不包右（左闭右开）  1.</description>
    </item>
    
    <item>
      <title>Python数据结构--概述</title>
      <link>https://jhweb.top/python/python/</link>
      <pubDate>Sat, 20 Jun 2020 14:50:24 +0800</pubDate>
      
      <guid>https://jhweb.top/python/python/</guid>
      <description>一、概述 数据： 电影《超时空接触》   问题：未知的事物？
  人类在生活生产，学习探索创造过程中遇到的未知事物
  如何从未知到已知
 感觉、经验、占卜、求神、 逻辑、数学、实验、 工程、 计算、 模型、模拟、仿真、 哲学？    提出有穷观点的能行方法概念是：希尔伯特
 由有限数量的明确有限指令构成 指令执行在有限步骤后终止 指令每次执行都总能得到唯一结果 原则上可以由单独采用纸笔完成，而不是依靠其它辅助 每一条指令可以机械的被精确的执行，而不需要智慧和灵感    20世纪30年代，几个关于计算的数学模型
 哥德尔和克莱尼的递归函数模型 求其的Lambda演算模型 波斯特的Post机模型 图灵的图灵机模型    图灵机Turing Machine   1936年，Alan Turing提出的一种抽象计算模型
 基本思想是用机器模拟人们使用纸笔进行数学运算的过程，但比数值计算更为简答。    《The Imitation Game 2014》模仿游戏
  图灵机的规则由五个部分来构成。
  算法和计算复杂性   What：是什么？
 面向判断与分类的问题    Why：问什么？</description>
    </item>
    
    <item>
      <title>Python_协程</title>
      <link>https://jhweb.top/python/python_%E5%8D%8F%E7%A8%8B/</link>
      <pubDate>Fri, 31 Jul 2020 15:37:16 +0800</pubDate>
      
      <guid>https://jhweb.top/python/python_%E5%8D%8F%E7%A8%8B/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Python_线程和进程</title>
      <link>https://jhweb.top/python/python_%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/</link>
      <pubDate>Sat, 01 Aug 2020 15:37:47 +0800</pubDate>
      
      <guid>https://jhweb.top/python/python_%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/</guid>
      <description>并发 一、基本概念 二、并发和并行的区别   并行，parallel
 同时做某些事，看可以互不干扰的同一时刻做几件事 举例，告诉公路的车道，双向四车道，所有车辆可以互不干扰的自己的车道上跑。    并发，concurrency
 同时做某些事，但是强调，同一时段做了几件事    三、并发的解决 “打饭模型” 中午12点，开饭，涌入食堂，就是并发，人很多就是高并发。
  队列，缓冲区
只有一个窗口排队。队列：先进先出。队列就是缓冲区。 女士优先，认为“优先队列”
  争抢
只有一个窗口，没有秩序。挤到的占据窗口，打到饭为止。 锁定窗口：锁机制
  预处理
提前做好保证供应。 提前加载用户需要的数据，预处理，缓存常用。
  并行
成百上千人吃饭，多开窗口形成多个队列。
日常购买服务器，多开进程，进程实现并行处理，解决并发问题。
&amp;ldquo;水平扩展&amp;rdquo;
  提速
提高单个窗口的打饭速度。提高员工的能力。
提高CPU性能。
“垂直扩展”
  消息中间件
走廊，缓冲人流，多个安检进站
常见消息中间件：RabbitMQ、ActiveMQ(Apache)、RocketMQ(阿里Apache)、
大数据领域高并发分布式解决方案：Kafka(Apache)
   进程和线程 在实现现成的操作系统中，线程事操作系统能够进行运算调度的最小单位。它被包含在进程之中，进程中的实际运算单位。一个程序的执行实例就是一个进程。
  进程（process）是计算机中程序关于某数据集合上的一次运行活动，是系统进行资源分配和调度的基本单位，是操作系统结构的基础。
  进程和程序的关系。
  程序是源代码编译后的文件，而这些文件存放在磁盘上。当程序被操作系统加载到内存中，就是进程，进程中存放着指令和数据（资源），它也是线程的容器。
  Linux进程有父进程，子进程，Windows的进程是平等关系。</description>
    </item>
    
    <item>
      <title>Python_多线程</title>
      <link>https://jhweb.top/python/python_%E5%A4%9A%E7%BA%BF%E7%A8%8B/</link>
      <pubDate>Mon, 03 Aug 2020 16:49:08 +0800</pubDate>
      
      <guid>https://jhweb.top/python/python_%E5%A4%9A%E7%BA%BF%E7%A8%8B/</guid>
      <description>多线程 顾名思义多个线程，一个进程中如果有多个线程，实现一种并发。
一、线程安全 daemon线程和non-daemon线程     名称 含义     daemon属性 表示现场是否是daemon线程，这个值必须在start（）之前设置，否则引发RuntimeError异常   isDaemon（） 是否是daemon线程   setDaemon 设置daemon线程，必须在start方法之前设置       non-daemon的情况：daemon=False或者默认不设置
from threading import Thread from time import sleep import threading, logging logging.basicConfig(level=logging.INFO, ) def work(): for _ in range(10): msg = f&amp;#39;{threading.current_thread()}&amp;#39; logging.info(msg) t = Thread(target=work, name=&amp;#39;w1&amp;#39;, daemon=False) t.start() print(&amp;#39;end&amp;#39;) 结果
end INFO:root:&amp;lt;Thread(w1, started 13144)&amp;gt;--0 INFO:root:&amp;lt;Thread(w1, started 13144)&amp;gt;--1 INFO:root:&amp;lt;Thread(w1, started 13144)&amp;gt;--2 INFO:root:&amp;lt;Thread(w1, started 13144)&amp;gt;--3 INFO:root:&amp;lt;Thread(w1, started 13144)&amp;gt;--4 INFO:root:&amp;lt;Thread(w1, started 13144)&amp;gt;--5 INFO:root:&amp;lt;Thread(w1, started 13144)&amp;gt;--6 INFO:root:&amp;lt;Thread(w1, started 13144)&amp;gt;--7 INFO:root:&amp;lt;Thread(w1, started 13144)&amp;gt;--8 INFO:root:&amp;lt;Thread(w1, started 13144)&amp;gt;--9   deamon的情况：deamon=True</description>
    </item>
    
    <item>
      <title>OSI七层模型</title>
      <link>https://jhweb.top/computer_network/computer_network/</link>
      <pubDate>Sun, 26 Jul 2020 20:04:17 +0800</pubDate>
      
      <guid>https://jhweb.top/computer_network/computer_network/</guid>
      <description></description>
    </item>
    
    <item>
      <title>数据结构-树</title>
      <link>https://jhweb.top/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/tree/</link>
      <pubDate>Tue, 11 Aug 2020 19:56:20 +0800</pubDate>
      
      <guid>https://jhweb.top/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/tree/</guid>
      <description>树 树的例子  &amp;ldquo;非线性&amp;quot;数据结构 树在计算机科学的各个领域中被广泛应用  操作系统，图形学，数据库系统，计算机网络   树的例子：文件系统，HTML文档，域名体系  树结构相关术语  节点Node：组成书的基本结构  每一个节点都有自己的名称，或者&amp;quot;键值&amp;rdquo;，节点还可以保存额外数据项，数据项根据不同的应用而变   边Edge：边是组成树的另一个基本部分  每条边恰好连接两个节点，表示节点之间的关系，边具有出入方向； 每个节点（除根节点）恰有一条来自另一节点的入边。 每个节点可以有多条连到其它节点的出边。   根Root：树唯一一个没有如入边的节点 路径Path：由边依次连接在一起的节点的有序列表 子节点Children：入边均来自与同一个节点的若干节点，称为这个节点的子节点 父节点Parent：一个节点是其他所有出边所连接点的父节点。 兄弟节点Sibling：具有同一父节点的节点之间程为兄弟节点。 子树Subtree：一个节点和其所有子孙节点，以及相关边的集合。 叶节点Leaf：没有子节点的节点称为叶节点 层级Level：从根节点开始到达一个节点的路径，所包含的边的数量，程为这个节点的层级 高度：树中所有节点的最大层级称为书的高度。  树的定义  树由若干节点，以及两两连接节点的边组成，并有如下性质  其中一个节点被设定为根： 每个节点n，都恰连接一条来自节点p的边，p是n的父节点； 每个节点从根开始的路径是唯一的，如果每个节点最多两个子节点，这样的树称为“二叉树”。    树的定义（递归定义）  树是：  空集；或者由根节点及0或多个子树构成（其中子树也是树），每个子树的跟到根节点具有边相连。     </description>
    </item>
    
    <item>
      <title>ES6</title>
      <link>https://jhweb.top/%E5%89%8D%E7%AB%AF/es6/</link>
      <pubDate>Wed, 12 Aug 2020 16:33:28 +0800</pubDate>
      
      <guid>https://jhweb.top/%E5%89%8D%E7%AB%AF/es6/</guid>
      <description>JS  Javascript简称js，是一种动态弱类型脚本解释性语言，和HTML，CSS并称三大WEB核心技术，得到了几乎主流浏览器支持。 1994年，网景Netscape公司成立并发布Netscape Navigator浏览器，占据了很大的实参份额，网景意识到WEB需要动态，需要一种技术来实现 1995年9月网景浏览器2发布测试版本发布了liveScript,随即在12月的测试版就更名为Javascript。 1997年，网景、微软、sun、Borlan公司和其他组织在ECMA确定了ECMAScript语言标准。js则是ECMAscript标准的实现之一。 由于IE的捆绑销售，网景的单一浏览器市场萎缩，从1990年代的90%下降到2006年的1%。 1999年网景被AOL收购，收购后不久，Netscape公开浏览器代码，并创建了Mozilla组织。Mozilla组织使用Gecok引擎重写浏览器，当然Mozilla组织将Gecok引擎发布了Firefox浏览器。 2003年5月，网景解散。 AOL于2007年12月宣传支持Netscaoe浏览器。  网景的技术  HTTP Cookie，解决HTTP无状态 JavaScript SSL协议 JAR格式文件，将Java的class文件打包压缩，并加上签名 2012年4月9日，微软以10亿5千6百万美元购买800项美国在线的专利或专利授权，专家们认为网景的SSL，Cookie等专利可能是 微软愿意出高价的理由之一【wiki百科】  ES   ES,ECMAScript是由ECMA国际(前身为欧洲计算机制造商协会，英文名是European Computer Manufacturers Association)通过ECMA-262标准化的脚本程序设计语言。该语言被广泛应用于互联网。
  Javascript是商品名，目前商标权Oracle公司手中。ES是标准名。
  根据ES标准，有很多实现引擎，其中包括JavaScript或jscript，它们都是ECMA-262标准的实现和扩展。
  为什么之前浏览器兼容是大问题？
 运行HTML、CSS、Js技术都在发展，标准版本很多。浏览器内嵌的引擎是西安不太一致，甚至有不按照标准实现，或减少实现，或改变实现，或增加功能的实现，比如IE，这就导致了开发人员负担，很难做到一套代码可以兼容的跑在多种浏览器中，甚至不能跑在同一浏览器不同版本中。    1997年，制定首个版本ECMA-262
  1999年12月，ES3，支持更强大的正则表达式
  ES4太激进，最终放弃
  2009年，ES5发布，得到广泛支持。支持严格模式。支持Json。
  2015年，ES6发布，引入非常多的新的语言特性，还兼任旧版本特性。ES6之前按照版本号命名，从ES6开始使用年份作为版本号，ES6即ECMAScript 2015。
  V8  旧址浏览器实参一家独大，Firefox，chrome异军突起。 2008年9月2日，Google的chrome浏览器发布，一并发布的js引擎。就是V8引擎。V8使用的BSD协议开源。 V8引擎使用C++开发，将JavaScript编译成了机器码，而不是字节码，还是用很多优化方法提高性能，因此，V8引擎速度非常快。 V8引擎还可以独立运行，可以嵌入到其他任何C++程序中 V8引擎的诞生，使得服务器端运行JS成为了方便的事情。  Nodejs  Nodejs是服务器端运行服务端运行Javascript的开源、跨平台运行环境。 Nodejs冤死作者瑞安*达尔（Ryan Dahl），于2009年发布，使用了V8引擎，采用事件驱动，非阻塞异步IO模型。 2010年，npm软件包管理器但是，通过它，可以方便的发布，分析Nodejs的库和源代码。 Nodejs4.</description>
    </item>
    
    <item>
      <title>Mysql</title>
      <link>https://jhweb.top/mysql/mysql/</link>
      <pubDate>Sun, 30 Aug 2020 16:12:55 +0800</pubDate>
      
      <guid>https://jhweb.top/mysql/mysql/</guid>
      <description>内联，左联，右联  Name表：select * from Name     ID Name     1 张三   2 李四   3 王五     Company：select * from Company     ID Name     1 银行   2 软件   3 房地产      内联
select a.*,b.* from Name as a linner join Company as b on a.</description>
    </item>
    
    <item>
      <title>HTML</title>
      <link>https://jhweb.top/%E5%89%8D%E7%AB%AF/html/</link>
      <pubDate>Wed, 19 Aug 2020 21:29:53 +0800</pubDate>
      
      <guid>https://jhweb.top/%E5%89%8D%E7%AB%AF/html/</guid>
      <description>HTML文字处理基础   标题 &amp;lt;h1&amp;gt;&amp;lt;h2&amp;gt;&amp;lt;h3&amp;gt;&amp;lt;h4&amp;gt;&amp;lt;h5&amp;gt;&amp;lt;h6&amp;gt;。每个元素代表文档中不同级别的内容；
 &amp;lt;h1&amp;gt;表示主标题 &amp;lt;h2&amp;gt;表示二级子标题 &amp;lt;h3&amp;gt;表示三级子标题，等 &amp;lt;h1&amp;gt;我的文章的标题&amp;lt;/h1&amp;gt;    段落 &amp;lt;p&amp;gt;
 &amp;lt;p&amp;gt;我是一个段落&amp;lt;p&amp;gt;    列表Lists
 无序Unordered &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt;豆浆&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;油条&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;豆汁&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;焦圈&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt;  有序Ordered &amp;lt;ol&amp;gt; &amp;lt;li&amp;gt;沿着条路走到头&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;右转&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;直行穿过第一个十字路口&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;在第三个十字路口处左转&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;继续走 300 米，学校就在你的右手边&amp;lt;/li&amp;gt; &amp;lt;/ol&amp;gt;     重点强调 在日常用语中，常常加重某个字的读音，加粗。标记。
 强调&amp;lt;em&amp;gt; 非常重要  加粗&amp;lt;strong&amp;gt;   斜体字，粗体字，下划线  &amp;lt;i&amp;gt;被用来表示斜体表达的意义：外国文字，分类名称，技术术语，一种思想 &amp;lt;b&amp;gt;被用来传达传统上用粗体表达的意义：关键字，产品名称，引导句 &amp;lt;u&amp;gt;被用来传达传统上用下划线表达的意义：专有名词，拼写错误      建立超链接
 什么是超链接？ 超链接市互联网提供的最令人兴奋的创新之一，它们从一开始就一直是互联网的一个特性，使互联网成为互联的网络。超链接是我们能够将我们的文档连接到任何一个其他文档（或其他资源），也可以连接到文档的指定部分。 链接的解析  通过将文本(或其他内容，见块链接)转换为&amp;lt;a&amp;gt;元素内的链接来创建基本链接，给它一个href属性，它将包含你希望链接指向的网址。 &amp;lt;a href=&amp;quot;https://www.</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://jhweb.top/git/</link>
      <pubDate>Fri, 31 Jul 2020 15:55:13 +0800</pubDate>
      
      <guid>https://jhweb.top/git/</guid>
      <description>安装 [官网] (https://git-scm.com/downloads) 下载对应的Git客户端
Linux # yum install git windows 下载对应32或64版本
 概念  Repository仓库，版本库 git初始化，在当前目录生成一个.git目录  Git的文件分类  忽略文件lgnored，git不在关注的文件  移动和删除   git mv src dest 改名，直接修改
  git rm file 会同时是在版本库和工作目录中删除
  </description>
    </item>
    
    <item>
      <title>工具</title>
      <link>https://jhweb.top/python/tools/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jhweb.top/python/tools/</guid>
      <description>Python 《维基百科》-&amp;gt;
  Python是一种广泛使用的解释型、高级编程、通用型编程语言，由吉多·范罗苏姆创造，第一版发布于1991年。Python是ABC语言的后继者，也可以视之为一种使用传统中缀表达式的LISP方言[4]。Python的设计哲学强调代码的可读性和简洁的语法（尤其是使用空格缩进划分代码块，而非使用大括号或者关键词）。相比于C++或Java，Python让开发者能够用更少的代码表达想法。不管是小型还是大型程序，该语言都试图让程序的结构清晰明了。
  与Scheme、Ruby、Perl、Tcl等动态类型编程语言一样，Python拥有动态类型系统和垃圾回收功能，能够自动管理内存使用，并且支持多种编程范式，包括面向对象、命令式、函数式和过程式编程。其本身拥有一个巨大而广泛的标准库。
  Python 解释器本身几乎可以在所有的操作系统中运行。Python的其中一个解释器CPython是用C语言编写的、是一个由社群驱动的自由软件，目前由Python软件基金会管理。
   Pycharm  PyCharm是一个用于计算机编程的集成开发环境，主要用于Python语言开发，由捷克公司JetBrains开发，提供代码分析、图形化调试器，集成测试器、集成版本控制系统，并支持使用Django进行网页开发。 PyCharm是一个跨平台开发环境，拥有Microsoft Windows、macOS和Linux版本。   Tengine Tengine是由淘宝网发起的Web服务器项目。
 Tengine是一个由淘宝从Nginx复刻出来的HTTP服务器，现时版本为2.2.2。Tengine对Nginx的修改版本是于2011年12月开始释放出来成为开源项目，两者配置兼容。  SQLALchemy SQLAlchemy是一个ORM框架 大量使用元编程
安装 $ pip install sqlalchemy
文档 </description>
    </item>
    
    <item>
      <title>简历</title>
      <link>https://jhweb.top/about/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jhweb.top/about/</guid>
      <description>联系方式  手机：15716619548 Email：15716619548@163.com 微信号：15716619548  个人信息  蒋浩文/男/1997 本科/南阳理工学院/软件学院 工作年限：2020年应届 技术博客：https://jhweb.top Github: https://github.com/qyhx-jhw/   期望职位：后端开发相关岗位  项目经历  项目名称：人事信息管理项目 项目简介：将琐碎的人事工作在系统中实现，简单便携化。 主要工作：  主要负责前端界面的设计与实现，后端服务器设计搭建，实现前后端交互。 前端网页的实现采用了 JavaScript 中的 React 库，进行搭建实现，React 使得前端设计也实现了模块化开发。 界面组件采用了 Ant Design 的组件。 与后端交互用到了 axios 库将数据 Json 处理进行传输。 后端服务使用了 Django 框架。 数据存储用到了关系型数据库 MySQL。    技能清单  以下是我熟练使用的技能  编程语言：Python · 后端框架：Django · 前端框架：React   以下是我接触并了解的技能  Redis 数据库，Linux 的基本命令，Nginx    </description>
    </item>
    
  </channel>
</rss>